import * as fs from 'fs';
import * as path from 'path';
import PDFDocument from 'pdfkit';
import { NewsArticle } from '../tools/news-fetcher';

interface PdfGenerationOptions {
  title: string;
  date: string;
  topics: string[];
  articlesByTopic: Record<string, { article: NewsArticle; summary: string }[]>;
}

export async function generateNewsPDF(options: PdfGenerationOptions): Promise<string> {
  const { title, date, topics, articlesByTopic } = options;
  
  const doc = new PDFDocument({ 
    margin: 50,
    size: 'A4'
  });
  
  const fileName = `news-briefing-${Date.now()}.pdf`;
  const filePath = path.join(process.cwd(), fileName);
  
  const stream = fs.createWriteStream(filePath);
  doc.pipe(stream);

  doc.info.Title = title;
  doc.info.Author = 'NeuroLink News Provider';
  doc.info.Subject = 'News Briefing';
  doc.info.Keywords = topics.join(', ');
  
  doc.fontSize(24)
    .font('Helvetica-Bold')
    .text(title, { align: 'center' });
  
  doc.fontSize(12)
    .font('Helvetica-Oblique')
    .text(date, { align: 'center' })
    .moveDown(2);
  
  for (const topic of topics) {
    if (!articlesByTopic[topic] || articlesByTopic[topic].length === 0) {
      continue;
    }
    
    doc.fontSize(16)
      .font('Helvetica-Bold')
      .fillColor('#444444')
      .text(`ðŸ“Œ ${topic}`, { underline: true })
      .moveDown(0.5);

    for (const { article, summary } of articlesByTopic[topic]) {
      doc.fontSize(14)
        .font('Helvetica-Bold')
        .fillColor('#000000')
        .text(article.title, { underline: true, link: article.link })
        .moveDown(0.25);
      
      doc.fontSize(10)
        .font('Helvetica-Oblique')
        .fillColor('#555555')
        .text(`Source: ${article.source} | Published: ${new Date(article.pubDate).toLocaleString()}`)
        .moveDown(0.5);
      
      doc.fontSize(11)
        .font('Helvetica')
        .fillColor('#000000')
        .text(summary)
        .moveDown(1);
      
      if (articlesByTopic[topic].indexOf({ article, summary }) < articlesByTopic[topic].length - 1) {
        doc.moveTo(50, doc.y)
          .lineTo(doc.page.width - 50, doc.y)
          .stroke('#cccccc')
          .moveDown(0.5);
      }
    }
    
    if (topics.indexOf(topic) < topics.length - 1) {
      doc.addPage();
    }
  }
  
  doc.fontSize(10)
    .font('Helvetica-Oblique')
    .text('Generated by NeuroLink News Provider', { align: 'center' });
  
  doc.end();
  
  return new Promise<string>((resolve, reject) => {
    stream.on('finish', () => {
      resolve(filePath);
    });
    stream.on('error', reject);
  });
}